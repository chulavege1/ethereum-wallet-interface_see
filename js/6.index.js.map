{"version":3,"file":"./js/6.index.js","mappings":"gVAWIA,EAAU,CAAC,EAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKJ,KAAW,IAAQM,QAAS,IAAQA,OC4D1D,QAjFmC,WACjC,IAAQC,GAAgBC,EAAAA,EAAAA,MAAhBD,YACAE,GAAUC,EAAAA,EAAAA,MAAVD,MAERE,GAAqCC,EAAAA,EAAAA,KAA7BC,EAAcF,EAAdE,eAAgBC,EAAQH,EAARG,SAExBC,GAAkCC,EAAAA,EAAAA,UAA6B,QAAOC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/DI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA0CL,EAAAA,EAAAA,UACxC,QACDM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAFME,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAGtCG,GAA0CT,EAAAA,EAAAA,UAAyB,OAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlEE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAkCb,EAAAA,EAAAA,WAAS,GAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,IAE9BG,EAAAA,EAAAA,YAAU,WACJnB,EAASoB,OAAS,GACpBF,GAAa,EAEjB,GAAG,CAAClB,IAEJ,IAAMqB,EAAkB,SAACC,GACnBb,IAAkBa,EACpBR,EAAmC,QAAlBD,EAA0B,OAAS,QAEpDP,EAAagB,GACbR,EAAiB,OACjBJ,EAAiBY,GAErB,EAEMC,GAAaC,EAAAA,EAAAA,GAAIxB,GAAUyB,MAAK,SAACC,EAAGC,GACxC,IAAMC,EAASF,EAAErB,GACXwB,EAASF,EAAEtB,GACbyB,EAAa,EAMjB,OALIF,EAASC,EACXC,EAAa,EACJF,EAASC,IAClBC,GAAc,GAEK,YAAdzB,GAAwC,EAAdyB,EAAkBA,CACrD,IAEA,OAAKrC,EAIDwB,EAEAc,EAAAA,cAAA,OAAKC,UAAU,cACC,IAAbrC,EAAMsC,IAAyB,MAAbtC,EAAMsC,GACrB,uBACA,sCAMRF,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAQG,QAAS,kBAAMb,EAAgB,OAAO,GAAE,QAChDU,EAAAA,cAAA,eACAA,EAAAA,cAAA,UAAQG,QAAS,kBAAMb,EAAgB,UAAU,GAAE,YAErDU,EAAAA,cAAA,WACGR,EAAWY,KAAI,SAACC,EAASC,GAAK,OAC7BN,EAAAA,cAAA,OAAKO,IAAKD,GACRN,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAKK,EAAQG,OAEfR,EAAAA,cAAA,WACEA,EAAAA,cAAA,KAAGS,MAAO,CAAEC,SAAU,SAAW1C,EAAesC,KAElDN,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAIK,EAAQA,UAEV,MAhCLL,EAAAA,cAAA,OAAKC,UAAU,cAAa,kCAqCvC,C,kECjFIU,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOX,GAAI,4mCAA6mC,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,8EAA8E,MAAQ,GAAG,SAAW,6gBAA6gB,eAAiB,CAAC,ggDAAggD,WAAa,MAEj0G,S","sources":["webpack://ethereum-wallet-interface/./front-end/components/ux/liquidity-market/liquidity_market.sass?e391","webpack://ethereum-wallet-interface/./front-end/components/ux/liquidity-market/index.tsx","webpack://ethereum-wallet-interface/./front-end/components/ux/liquidity-market/liquidity_market.sass"],"sourcesContent":["\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./liquidity_market.sass\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./liquidity_market.sass\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useState } from \"react\";\nimport { useAccount, useNetwork } from \"wagmi\";\nimport { useBalanceContext } from \"~CONTEXT/pool-data\";\nimport \"./liquidity_market.sass\";\n\nconst Liquidity_market: React.FC = () => {\n  const { isConnected } = useAccount();\n  const { chain } = useNetwork();\n\n  const { tokenAddresses, balances } = useBalanceContext();\n\n  const [sortField, setSortField] = useState<\"name\" | \"balance\">(\"name\");\n  const [lastSortField, setLastSortField] = useState<\"name\" | \"balance\">(\n    \"name\",\n  );\n  const [sortDirection, setSortDirection] = useState<\"asc\" | \"desc\">(\"asc\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (balances.length > 0) {\n      setIsLoading(false);\n    }\n  }, [balances]);\n\n  const handleSortClick = (field: \"name\" | \"balance\") => {\n    if (lastSortField === field) {\n      setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortField(field);\n      setSortDirection(\"asc\");\n      setLastSortField(field);\n    }\n  };\n\n  const sortedData = [...balances].sort((a, b) => {\n    const fieldA = a[sortField];\n    const fieldB = b[sortField];\n    let comparison = 0;\n    if (fieldA > fieldB) {\n      comparison = 1;\n    } else if (fieldA < fieldB) {\n      comparison = -1;\n    }\n    return sortField === \"balance\" ? comparison * -1 : comparison;\n  });\n\n  if (!isConnected) {\n    return <div className=\"isLoadPool\">To continue connect your wallet</div>;\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"isLoadPool\">\n        {chain.id === 1 || chain.id === 137\n          ? \"Loading pool data...\"\n          : \"Connect to polygon or ethereum net\"}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Liquidity_market\">\n      <div>\n        <button onClick={() => handleSortClick(\"name\")}>Name</button>\n        <button></button>\n        <button onClick={() => handleSortClick(\"balance\")}>Balance</button>\n      </div>\n      <div>\n        {sortedData.map((balance, index) => (\n          <div key={index}>\n            <div>\n              <h2>{balance.name}</h2>\n            </div>\n            <div>\n              <p style={{ fontSize: \"16px\" }}>{tokenAddresses[index]}</p>\n            </div>\n            <div>\n              <p>{balance.balance}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Liquidity_market;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.Liquidity_market{display:flex;justify-content:space-between;flex-direction:column;padding:10px 0;background:rgba(0,0,0,.5);font-weight:bold;font-size:20px;line-height:100%;width:99%;border-radius:4px;margin:0 auto}.Liquidity_market>div:first-child{width:100%;justify-content:space-around;display:flex}.Liquidity_market>div:first-child button{width:100%;background:none;border:.1px solid rgba(255,255,255,.2156862745);color:#fff;height:30px}.Liquidity_market>div:last-child{width:100%;display:flex;flex-direction:column}.Liquidity_market>div:last-child>div{display:flex;align-items:center;color:#fff;background:rgba(255,255,255,.1);margin:10px 0px;border-radius:10px}.Liquidity_market>div:last-child>div>div{display:flex;justify-content:center;align-items:center;width:100%;height:100%;min-height:60px;border:.1px solid rgba(255,255,255,.2156862745)}.Liquidity_market>div:last-child>div>div:first-child{display:flex;justify-content:space-around}.Liquidity_market>div:last-child>div>div h2{font-size:18px;margin:0}.isLoadPool{height:100vh;display:flex;justify-content:center;align-content:center;font-style:italic;margin-top:10px}`, \"\",{\"version\":3,\"sources\":[\"webpack://./front-end/components/ux/liquidity-market/liquidity_market.sass\"],\"names\":[],\"mappings\":\"AAAA,kBACI,YAAA,CACA,6BAAA,CACA,qBAAA,CACA,cAAA,CACA,yBAAA,CACA,gBAAA,CACA,cAAA,CACA,gBAAA,CACA,SAAA,CACA,iBAAA,CACA,aAAA,CACA,kCACI,UAAA,CACA,4BAAA,CACA,YAAA,CACA,yCACI,UAAA,CACA,eAAA,CACA,+CAAA,CACA,UAAA,CACA,WAAA,CACR,iCACI,UAAA,CACA,YAAA,CACA,qBAAA,CACA,qCACI,YAAA,CACA,kBAAA,CACA,UAAA,CACA,+BAAA,CACA,eAAA,CACA,kBAAA,CACA,yCACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CACA,eAAA,CACA,+CAAA,CACA,qDACI,YAAA,CACA,4BAAA,CAEJ,4CACI,cAAA,CACA,QAAA,CAIpB,YACI,YAAA,CACA,YAAA,CACA,sBAAA,CACA,oBAAA,CACA,iBAAA,CACA,eAAA\",\"sourcesContent\":[\".Liquidity_market\\n    display: flex\\n    justify-content: space-between\\n    flex-direction: column\\n    padding: 10px 0\\n    background: rgba(0, 0, 0, 0.5)\\n    font-weight: bold\\n    font-size: 20px\\n    line-height: 100%\\n    width: 99%\\n    border-radius: 4px\\n    margin: 0 auto\\n    & > div:first-child\\n        width: 100%\\n        justify-content: space-around\\n        display: flex\\n        button\\n            width: 100%\\n            background: none\\n            border: 0.1px solid #ffffff37\\n            color: #fff\\n            height: 30px   \\n    & > div:last-child\\n        width: 100%\\n        display: flex\\n        flex-direction: column\\n        & > div\\n            display: flex\\n            align-items: center\\n            color: #fff\\n            background: rgba(255, 255, 255, 0.1)\\n            margin: 10px 0px\\n            border-radius: 10px\\n            & > div \\n                display: flex\\n                justify-content: center\\n                align-items: center\\n                width: 100%\\n                height: 100%\\n                min-height: 60px\\n                border: 0.1px solid #ffffff37\\n                &:first-child\\n                    display: flex\\n                    justify-content: space-around\\n                    \\n                h2\\n                    font-size: 18px\\n                    margin: 0\\n\\n\\n\\n.isLoadPool\\n    height: 100vh\\n    display: flex\\n    justify-content: center\\n    align-content: center\\n    font-style: italic\\n    margin-top: 10px\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","isConnected","useAccount","chain","useNetwork","_useBalanceContext","useBalanceContext","tokenAddresses","balances","_useState","useState","_useState2","_slicedToArray","sortField","setSortField","_useState3","_useState4","lastSortField","setLastSortField","_useState5","_useState6","sortDirection","setSortDirection","_useState7","_useState8","isLoading","setIsLoading","useEffect","length","handleSortClick","field","sortedData","_toConsumableArray","sort","a","b","fieldA","fieldB","comparison","React","className","id","onClick","map","balance","index","key","name","style","fontSize","___CSS_LOADER_EXPORT___","push","module"],"sourceRoot":""}